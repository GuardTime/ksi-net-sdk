Version 3.10
2018-02-19 3.10.X

* FEATURE: Added High availability services (KSINETAPI-122)
* FEATURE: Handle pushed configuration updates from Aggregator and Extender (KSINETAPI-128)
* FEATURE: Create new signature from existing root signature and aggregation hash chain elements (KSINETAPI-132)
* IMPROVEMENT: Added ability to make KSI extension requests over TCP/IP (KSINETAPI-129)
* IMPROVEMENT: Handling of deprecated and obsolete hash functions, SHA1-s is no longer trusted (KSINETAPI-127)
* IMPROVEMENT: KSI service now provides verification functionality (KSINETAPI-126)
* IMPROVEMENT: Added default verification policy (KSINETAPI-125)
* IMPROVEMENT: Added new verification error code INT-17 (KSINETAPI-134)
* IMPROVEMENT: Added HMAC algorithm setting to app.config (KSINETAPI-131)
* IMPROVEMENT: Split HTTP and TCP configurations.
* IMPROVEMENT: Improved verification rule names (KSINETAPI-139)
* IMPROVEMENT: Refactored and improved unit tests (KSINETAPI-138)
* BUGFIX: Fixed extending of a signature without calendar hash chain (KSINETAPI-137)
* IMPROVEMENT: Fixed CalendarAuthenticationRecordSignatureVerificationRule constructor not to take any parameters (KSINETAPI-135)
* IMPROVEMENT: Removed AggregationAuthenticationRecord (KSINETAPI-140)
* BUGFIX: Fixed TCP service protocol deadlock (KSINETAPI-143)


Version 3.9
2017-09-12 3.9.369

* IMPROVEMENT: Added input hash algorithm check rule (KSINETAPI-124)
* IMPROVEMENT: Set PDU V2 as default pdu version (KSINETAPI-123)
* IMPROVEMENT: Added verification of the validity of the signing certificate during aggregation time (KSINETAPI-121)
* IMPROVEMENT: Using ArgumentNullException when checking if argument is not null (KSINETAPI-118)
* IMPROVEMENT: Renamed KsiServiceInvalidRequestFormatException to KsiServiceUnexpectedResponseFormatException (KSINETAPI-117)
* IMPROVEMENT: Removed RegistrationTime from CalendarHashChain (KSINETAPI-116)
* IMPROVEMENT: Added user-provided hash level check against level correction into internal verification (KSINETAPI-112)
* IMPROVEMENT: Improved handling of unknown / redundant response payloads (KSINETAPI-111)
* IMPROVEMENT: Keep socket open when aggregating using tcp connection (KSINETAPI-78)

Version 3.8

2017-04-26 3.8.308

* IMPROVEMENT: Improved block signer interface (KSINETAPI-109)
* IMPROVEMENT: Improved signature parsing and verification (KSINETAPI-108)
* IMPROVEMENT: Checking equality of outgoing and incoming messages HMAC (KSINETAPI-107)
* BUGFIX: Added leading zeros banning when decoding integer fields (KSINETAPI-106)
* BUGFIX: Fixed certificate subject RDN selector (KSINETAPI-105)
* IMPROVEMENT: Set level correction when input hash level is greater than 0 (KSINETAPI-104)
* IMPROVEMENT: Updated signature verification process (KSINETAPI-103)
* IMPROVEMENT: Added GetIdentity method to KsiSignature to get identity information as an array (KSINETAPI-101)

Version 3.7

2017-01-04 3.7.235

* BUGFIX: Fixed PKCS#7 signature verification (KSINETAPI-100)
* BUGFIX: Fixed PDU HMAC calculation (KSINETAPI-98)
* BUGFIX: Made status field mandatory in aggregation response payload (KSINETAPI-97)
* IMPROVEMENT: Refactored KsiService and CompositeTag (and classes inheriting from it)
* BUGFIX: Added HMAC check when payload contains an error message (KSINETAPI-93)
* BUGFIX: Added response ID check to PDU v1 response (KSINETAPI-92)
* IMPROVEMENT: Added functionality for requesting configuration from extender (KSINETAPI-86)

Version 3.6

2016-11-02 3.6.188

* IMPROVEMENT: Added RFC 3161 record aggregation time and hash chain index verification (KSINETAPI-84)
* BUGFIX: Allow extend response payload to contain calendar hash chain when status is not 0 (KSINETAPI-91)
* IMPROVEMENT: Support for both old and new KSIAP/KSIEP PDU (KSINETAPI-74)
* IMPROVEMENT: Updated CONTRIBUTING.md (KSINETAPI-81)

Version 3.5

2016-10-05 3.5.148

* IMPROVEMENT: Improved user provided publication based verification (KSINETAPI-71)
* BUGFIX: Fixed typo in CAL-04 error text (KSINETAPI-79)
* IMPROVEMENT: Beautified invalid TLV type message
* IMPROVEMENT: Added internal verification to signature creation methods with possibility to override the verification policy (KSINETAPI-70, KSINETAPI-80)
* BUGFIX: Fixed method Extend(IKsiSignature signature, PublicationData publicationData) (KSINETAPI-77)
* IMPROVEMENT: Added dependencies and compatibility to README (KSINETAPI-76)

Version 3.4

2016-07-04 3.4.110

* FEATURE: Added support for local aggregation (KSINETAPI-61)
* BUGFIX: Changed exception to be thrown when invalid chain index (KSINETAPI-48)

Version 3.3

2016-06-01

* IMPROVEMENT: Verify the existence and correctness of the padding in the metadata TLV when verifying the signature (KSINETAPI-68)

Version 3.2

2016-04-20 3.2.0

* BUGFIX: Added aggregation hash chain index match rule (KSINETAPI-65)
* IMPROVEMENT: Removed SHA-224 support. Added strict legacy id tag check on signature parsing. (KSINETAPI-62)
* IMPROVEMENT: Changed signature identity separator to <space>::<space>
* IMPROVEMENT: Changed the order of the identity fields. Now the order of the identity fields are reversed, e.g. higher-aggregator :: lower-aggregator :: gateway :: user
* BUGFIX: Aggregation hash chain right links equality check fix (KSINETAPI-63)

Version 3.1

2016-03-21 3.1.0

* IMPROVEMENT: Added some convenience methods for API users (KSINETAPI-58):
	- Ksi class Sign methods taking Stream or byte[] as a parameter
	- KsiProvider class CreateDataHasher method without parameters
	- PublicationsFile class GetNearestPublicationRecord method taking DateTime as a parameter
* IMPROVEMENT: Made certificates loading thread-safe. (KSINETAPI-57)
* BUGFIX: Modified http request headres that are not supported by aggregation servers any more (removed 'Expect' header and changed 'Connection' header to 'Close'). (KSINETAPI-56)
* REMARK: If you will be signing serveral documents per second then consider setting max allowed http connections in your App.config file. Bear in mind that one signing request takes around 1 second.